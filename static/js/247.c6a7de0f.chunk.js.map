{"version":3,"file":"static/js/247.c6a7de0f.chunk.js","mappings":"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","sources":["components/Cast/Cast.jsx","service/Api.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchMovieCast } from \"../../service/Api\";\nimport Loader from \"../Loader/Loader\";\n\nconst Cast = () => {\n  const { movieID } = useParams();\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchData = async () => {\n      try {\n        const movie = await fetchMovieCast(movieID);\n        setCast(movie);\n      } catch (error) {\n        console.error('Error fetching movie cast:', error); // Dodano logowanie błędu\n      } finally {\n        setIsLoading(false); // Przeniesiono tutaj, aby zapewnić wyłączenie ładowania niezależnie od wyniku\n      }\n    };\n\n    fetchData();\n  }, [movieID]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {cast.length !== 0 ? (\n        <div>\n          <h2>Movie Cast</h2>\n          <ul>\n            {cast.map((actor) => (\n              <li key={actor.id}>\n                <img\n                  width=\"200px\"\n                  height=\"300px\"\n                  src={actor.profile_path ? `https://image.tmdb.org/t/p/w300${actor.profile_path}` : undefined}\n                  alt={actor.original_name}\n                />\n                <p>{actor.name}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      ) : (\n        <div>We don't have any cast for this movie.</div>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from \"axios\";\n\naxios.defaults.baseURL = \"https://api.themoviedb.org/3\";\n\nconst params = {\n  params: {\n    api_key: \"552a021037d600f0ab327b517683ae85\",\n    language: \"en-US\",\n  },\n};\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day`, params);\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async (movieId) => {\n  const response = await axios.get(`/movie/${movieId}`, params);\n  return response.data;\n};\n\nexport const handleSearch = async (movieName) => {\n  const response = await axios.get(`/search/movie?query=${movieName}`, params);\n  return response.data.results;\n};\n\nexport const fetchMovieCast = async (movieId) => {\n  const response = await axios.get(`movie/${movieId}/credits?`, params);\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async (movieId) => {\n  const response = await axios.get(`movie/${movieId}/reviews?`, params);\n  return response.data.results;\n};\n"],"names":["movieID","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","isLoading","setIsLoading","useEffect","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","movie","_context","prev","next","fetchMovieCast","sent","t0","console","error","finish","stop","apply","arguments","_jsxs","_Fragment","children","_jsx","Loader","length","map","actor","width","height","src","profile_path","concat","undefined","alt","original_name","name","id","axios","params","api_key","language","fetchTrendingMovies","response","abrupt","data","results","fetchMovieDetails","_ref2","_callee2","movieId","_context2","_x","handleSearch","_ref3","_callee3","movieName","_context3","_x2","_ref4","_callee4","_context4","_x3","fetchMovieReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}