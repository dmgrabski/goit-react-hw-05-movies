{"version":3,"file":"static/js/186.6b7c42a4.chunk.js","mappings":"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","sources":["components/Reviews/Reviews.jsx","service/Api.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchMovieReviews } from \"../../service/Api\";\nimport Loader from \"../Loader/Loader\";\n\nconst Reviews = () => {\n  const { movieID } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    let subscribed = true; // Kontroluje, czy komponent jest zamontowany\n\n    const fetchData = async () => {\n      setIsLoading(true);\n      try {\n        const movieReviews = await fetchMovieReviews(movieID);\n        if (subscribed) { // Aktualizuje stan tylko jeśli komponent jest zamontowany\n          setReviews(movieReviews);\n        }\n      } catch (error) {\n        console.error(error); // Logowanie błędów\n      } finally {\n        if (subscribed) {\n          setIsLoading(false); // Zawsze wyłącz ładowanie, jeśli komponent jest zamontowany\n        }\n      }\n    };\n\n    fetchData();\n\n    return () => {\n      subscribed = false; // Zaznacz, że komponent został odmontowany\n    };\n  }, [movieID]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {reviews.length > 0 ? (\n        <div>\n          <h2>Movie Reviews</h2>\n          <ul>\n            {reviews.map((review) => (\n              <li key={review.id}>\n                <p>{review.author}</p>\n                <p>{review.content}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      ) : (\n        <div>We don't have any reviews for this movie.</div>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from \"axios\";\n\naxios.defaults.baseURL = \"https://api.themoviedb.org/3\";\n\nconst params = {\n  params: {\n    api_key: \"552a021037d600f0ab327b517683ae85\",\n    language: \"en-US\",\n  },\n};\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day`, params);\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async (movieId) => {\n  const response = await axios.get(`/movie/${movieId}`, params);\n  return response.data;\n};\n\nexport const handleSearch = async (movieName) => {\n  const response = await axios.get(`/search/movie?query=${movieName}`, params);\n  return response.data.results;\n};\n\nexport const fetchMovieCast = async (movieId) => {\n  const response = await axios.get(`movie/${movieId}/credits?`, params);\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async (movieId) => {\n  const response = await axios.get(`movie/${movieId}/reviews?`, params);\n  return response.data.results;\n};\n"],"names":["movieID","useParams","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","_useState3","_useState4","isLoading","setIsLoading","useEffect","subscribed","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","movieReviews","_context","prev","next","fetchMovieReviews","sent","t0","console","error","finish","stop","apply","arguments","_jsxs","_Fragment","children","_jsx","Loader","length","map","review","author","content","id","axios","params","api_key","language","fetchTrendingMovies","response","abrupt","data","results","fetchMovieDetails","_ref2","_callee2","movieId","_context2","concat","_x","handleSearch","_ref3","_callee3","movieName","_context3","_x2","fetchMovieCast","_ref4","_callee4","_context4","cast","_x3","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}